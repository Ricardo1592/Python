*LEMBRAR DO ; no final

Eclipse
Ctra+shift+o para o Eclipse(IDE) para já colocar todos os imports que estiverem faltando
Ctrl+/ para comentar e descomentar uma parte selecionada

aula01 - pesquisar
heap
pilha
assembler
compilador

aula02

Void --> siginifica ausência de retorno

Tipos

* Para converter um tipo para outro:
	x =(int)var; 
	
  # Não dá para converter um tipo com maior tamanho num de menor, mas o contrário é possível(widening conversion)
	long_var= int_var é possível, mas int_var= long_var não funcionar

O float precisa de f no final --> ex: float var = 8.4f
	se não houver f, será double

- Primitive type (int, float, double, char)
- Objetc type (string)

Strings

String s = "java"  // é preciso declarar o tipo antes da varíavel, e o String é um objeto (obejct type) e não um tipo primitivo
 	métodos	
	- s.chartAt(index)
	- s.length() --> tamanho da string

For(int i=0; i< s.length; i++){
	System.out.println(s.charAt(i))
}


aula03

IF
public class IfElseStatements {

	public static void main(String[] args) {
//		If student's grade is grater than or equal to 60%
//		   Print "Passed"
//		Else
//		   Print "Failed"
		
		int grade = 50;
		
		if(grade == 60){
			System.out.println("Passed");
		}
		else if(grade > 60){
			System.out.println("Passed");
		}
		else {
			System.out.println("Failed");
		}
		if(grade>40 && grade<100){
			
		}
		if(grade>40 || grade <20) {
			
		}
		boolean b=true;	
		System.out.println(!b);	
	}
}

list1 == list2 -> compara o endereço de memória
lis1.equals(list2) -> Compara o conteúdo das listas 

aula 04

Method_overload --> Duas funções( // public static type name() {} ) com o mesmo nome, podem ser declaradas desde que seus tipos sejam diferentes

Parâmetro real / Parâmetro formal 